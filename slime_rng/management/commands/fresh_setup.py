from django.core.management.base import BaseCommand
from django.contrib.auth import get_user_model, authenticate
from django.db import transaction
from slime_rng.models import SlimeType, Collection, CollectionRequirement, CraftRecipe, CraftIngredient, PlayerInventory, PlayerCollection, PlayerCraft

User = get_user_model()

class Command(BaseCommand):
    help = 'Complete fresh setup from zero - clears and recreates everything'

    def handle(self, *args, **options):
        self.stdout.write("üöÄ Starting FRESH SETUP from zero...")
        
        with transaction.atomic():
            # STEP 1: Clear all existing data
            self.stdout.write("üßπ Step 1: Clearing existing data...")
            PlayerCraft.objects.all().delete()
            PlayerCollection.objects.all().delete()
            PlayerInventory.objects.all().delete()
            CraftIngredient.objects.all().delete()
            CraftRecipe.objects.all().delete()
            CollectionRequirement.objects.all().delete()
            Collection.objects.all().delete()
            SlimeType.objects.all().delete()
            User.objects.all().delete()
            self.stdout.write("‚úÖ All data cleared!")
            
            # STEP 2: Create SlimeTypes
            self.stdout.write("üéÆ Step 2: Creating SlimeTypes...")
            slimes_data = [
                {'name': '–ó–µ–ª—ë–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/green_slime.png', 'chance': '1/2', 'rarity': 'common', 'base_amount': 0},
                {'name': '–°–∏–Ω–∏–π –°–ª–∞–π–º', 'image': 'slimes/blue_slime.png', 'chance': '1/5', 'rarity': 'common', 'base_amount': 0},
                {'name': '–ö—Ä–∞—Å–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/red_slime.png', 'chance': '1/10', 'rarity': 'common', 'base_amount': 0},
                {'name': '–ñ—ë–ª—Ç—ã–π –°–ª–∞–π–º', 'image': 'slimes/yellow_slime.png', 'chance': '1/20', 'rarity': 'common', 'base_amount': 0},
                {'name': '–§–∏–æ–ª–µ—Ç–æ–≤—ã–π –°–ª–∞–π–º', 'image': 'slimes/purple_slime.png', 'chance': '1/50', 'rarity': 'common', 'base_amount': 0},
                {'name': '–û—Ä–∞–Ω–∂–µ–≤—ã–π –°–ª–∞–π–º', 'image': 'slimes/orange_slime.png', 'chance': '1/100', 'rarity': 'common', 'base_amount': 0},
                {'name': '–ë–æ–ª–æ—Ç–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/swamp_slime.png', 'chance': '1/200', 'rarity': 'uncommon', 'base_amount': 0},
                {'name': '–õ–µ–¥—è–Ω–æ–π –°–ª–∞–π–º', 'image': 'slimes/ice_slime.png', 'chance': '1/300', 'rarity': 'uncommon', 'base_amount': 0},
                {'name': '–û–≥–Ω–µ–Ω–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/fire_slime.png', 'chance': '1/400', 'rarity': 'uncommon', 'base_amount': 0},
                {'name': '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π –°–ª–∞–π–º', 'image': 'slimes/electro_slime.png', 'chance': '1/500', 'rarity': 'uncommon', 'base_amount': 0},
                {'name': '–ö–∞–º–µ–Ω–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/rock_slime.png', 'chance': '1/750', 'rarity': 'uncommon', 'base_amount': 0},
                {'name': '–í–æ–¥–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/gidro_slime.png', 'chance': '1/1000', 'rarity': 'uncommon', 'base_amount': 0},
                {'name': '–í–µ–¥—å–º–∞ –°–ª–∞–π–º', 'image': 'slimes/witch_slime.png', 'chance': '1/2000', 'rarity': 'rare', 'base_amount': 0},
                {'name': '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/crystal_slime.png', 'chance': '1/3000', 'rarity': 'rare', 'base_amount': 0},
                {'name': '–õ—É–Ω–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/moon_slime.png', 'chance': '1/5000', 'rarity': 'rare', 'base_amount': 0},
                {'name': '–°–æ–ª–Ω–µ—á–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/sun_slime.png', 'chance': '1/7500', 'rarity': 'rare', 'base_amount': 0},
                {'name': '–°–ª–∞–¥–∫–∏–π –°–ª–∞–π–º', 'image': 'slimes/candy_slime.png', 'chance': '1/10000', 'rarity': 'rare', 'base_amount': 0},
                {'name': '–ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –°–ª–∞–π–º', 'image': 'slimes/metal_slime.png', 'chance': '1/25000', 'rarity': 'epic', 'base_amount': 0},
                {'name': '–°–µ—Ä–µ–±—Ä—è–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/silver_slime.png', 'chance': '1/50000', 'rarity': 'epic', 'base_amount': 0},
                {'name': '–ó–æ–ª–æ—Ç–æ–π –°–ª–∞–π–º', 'image': 'slimes/golden_slime.png', 'chance': '1/75000', 'rarity': 'epic', 'base_amount': 0},
                {'name': '–ê–ª–º–∞–∑–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/diamond_slime.png', 'chance': '1/100000', 'rarity': 'epic', 'base_amount': 0},
                {'name': '–î—Ä–∞–∫–æ–Ω–∏–π –°–ª–∞–π–º', 'image': 'slimes/dragon_slime.png', 'chance': '1/250000', 'rarity': 'legendary', 'base_amount': 0},
                {'name': '–§–µ–Ω–∏–∫—Å–æ–≤—ã–π –°–ª–∞–π–º', 'image': 'slimes/phoenix_slime.png', 'chance': '1/500000', 'rarity': 'legendary', 'base_amount': 0},
                {'name': '–ï–¥–∏–Ω–æ—Ä–æ–∂–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/unicorn_slime.png', 'chance': '1/750000', 'rarity': 'legendary', 'base_amount': 0},
                {'name': '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –°–ª–∞–π–º', 'image': 'slimes/space_slime.png', 'chance': '1/1000000', 'rarity': 'legendary', 'base_amount': 0},
                {'name': '–í—Ä–µ–º–µ–Ω–Ω–æ–π –°–ª–∞–π–º', 'image': 'slimes/time_slime.png', 'chance': '1/5000000', 'rarity': 'mythic', 'base_amount': 0},
                {'name': '–ü–æ—Ä—Ç–∞–ª—å–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/portal_slime.png', 'chance': '1/10000000', 'rarity': 'mythic', 'base_amount': 0},
                {'name': '–°–ª–∞–π–º –ó–µ–º–ª—è', 'image': 'slimes/earth_slime.png', 'chance': '1/50000000', 'rarity': 'mythic', 'base_amount': 0},
                {'name': '–ß–∏—Ç–µ—Ä –°–ª–∞–π–º', 'image': 'slimes/cheater_slime.png', 'chance': '1/100000000', 'rarity': 'mythic', 'base_amount': 0},
                {'name': '–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/god_slime.png', 'chance': '1/1000000000', 'rarity': 'divine', 'base_amount': 0},
                {'name': '–ü–µ—Ä–≤–æ–±—ã—Ç–Ω—ã–π –°–ª–∞–π–º', 'image': 'slimes/prehistoric_greenslime.png', 'chance': '1/5000000000', 'rarity': 'divine', 'base_amount': 0},
                {'name': '–ì–ª–∏—Ç—á –°–ª–∞–π–º', 'image': 'slimes/xuiznaet_slime.png', 'chance': '1/10000000000', 'rarity': 'divine', 'base_amount': 0},
            ]
            
            slime_objects = {}
            for slime_data in slimes_data:
                slime = SlimeType.objects.create(**slime_data)
                slime_objects[slime.name] = slime
            
            self.stdout.write(f"‚úÖ Created {len(slimes_data)} SlimeTypes")
            
            # STEP 3: Create CraftRecipes
            self.stdout.write("üî® Step 3: Creating CraftRecipes...")
            recipes_data = [
                {
                    'name': '–ê–º—É–ª–µ—Ç –°–ª–∞–π–º–æ–≤',
                    'image': 'craft-items/slime_amulet.png',
                    'effect': '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É–¥–∞—á—É –≤ 2.5 —Ä–∞–∑–∞',
                    'effect_type': 'LuckBoost',
                    'effect_value': 2.5,
                    'ingredients': [('–ó–µ–ª—ë–Ω—ã–π –°–ª–∞–π–º', 5), ('–°–∏–Ω–∏–π –°–ª–∞–π–º', 2), ('–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π –°–ª–∞–π–º', 1)]
                },
                {
                    'name': '–ê–º—É–ª–µ—Ç –£—Ä–æ–∂–∞—è',
                    'image': 'craft-items/harves_amulet.png',
                    'effect': '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–º–æ–≤ –Ω–∞ 1',
                    'effect_type': 'HarvestMultiplier',
                    'effect_value': 1,
                    'ingredients': [('–ó–µ–ª—ë–Ω—ã–π –°–ª–∞–π–º', 20), ('–ñ—ë–ª—Ç—ã–π –°–ª–∞–π–º', 5), ('–ó–æ–ª–æ—Ç–æ–π –°–ª–∞–π–º', 1)]
                },
                {
                    'name': '–ê–º—É–ª–µ—Ç –í–µ—á–Ω–æ—Å—Ç–∏',
                    'image': 'craft-items/infinity_amulet.png',
                    'effect': '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É–¥–∞—á—É –≤ 10 —Ä–∞–∑',
                    'effect_type': 'LuckBoost',
                    'effect_value': 10,
                    'ingredients': [('–õ—É–Ω–Ω—ã–π –°–ª–∞–π–º', 1), ('–°–æ–ª–Ω–µ—á–Ω—ã–π –°–ª–∞–π–º', 1), ('–í—Ä–µ–º–µ–Ω–Ω–æ–π –°–ª–∞–π–º', 1)]
                },
                {
                    'name': '–ê–º—É–ª–µ—Ç –ò–∑–æ–±–∏–ª–∏—è',
                    'image': 'craft-items/abundance_amulet.png',
                    'effect': '–ü–æ–ª—É—á–∞–µ—à—å –Ω–∞ –æ–¥–Ω–æ–≥–æ —Å–ª–∞–π–º–∞ –±–æ–ª—å—à–µ',
                    'effect_type': 'HarvestMultiplier',
                    'effect_value': 1,
                    'ingredients': [('–§–∏–æ–ª–µ—Ç–æ–≤—ã–π –°–ª–∞–π–º', 10), ('–û—Ä–∞–Ω–∂–µ–≤—ã–π –°–ª–∞–π–º', 5), ('–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –°–ª–∞–π–º', 1)]
                },
                {
                    'name': '–ê–º—É–ª–µ—Ç —É–¥–∞—á–∏',
                    'image': 'craft-items/Lucky_amulet.png',
                    'effect': '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —à–∞–Ω—Å –Ω–∞–π—Ç–∏ —Ä–µ–¥–∫–æ–≥–æ —Å–ª–∞–π–º–∞ –≤ 2 —Ä–∞–∑–∞',
                    'effect_type': 'LuckBoost',
                    'effect_value': 2,
                    'ingredients': [('–ó–µ–ª—ë–Ω—ã–π –°–ª–∞–π–º', 10), ('–°–∏–Ω–∏–π –°–ª–∞–π–º', 5)]
                },
                {
                    'name': '–ê–º—É–ª–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏',
                    'image': 'craft-items/speed_amulet.png',
                    'effect': '–£–º–µ–Ω—å—à–∞–µ—Ç –≤—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏–Ω–∞ –Ω–∞ 20%',
                    'effect_type': 'SpinCooldown',
                    'effect_value': 0.8,
                    'ingredients': [('–ö—Ä–∞—Å–Ω—ã–π –°–ª–∞–π–º', 10), ('–ñ—ë–ª—Ç—ã–π –°–ª–∞–π–º', 5)]
                },
            ]
            
            recipe_objects = {}
            for recipe_data in recipes_data:
                recipe = CraftRecipe.objects.create(
                    name=recipe_data['name'],
                    image=recipe_data['image'],
                    effect=recipe_data['effect'],
                    effect_type=recipe_data['effect_type'],
                    effect_value=recipe_data['effect_value'],
                    created_by_default=True
                )
                
                # Add ingredients
                for slime_name, amount in recipe_data['ingredients']:
                    if slime_name in slime_objects:
                        CraftIngredient.objects.create(
                            recipe=recipe,
                            slime_type=slime_objects[slime_name],
                            amount=amount
                        )
                
                recipe_objects[recipe.name] = recipe
            
            self.stdout.write(f"‚úÖ Created {len(recipes_data)} CraftRecipes")
            
            # STEP 4: Create Collections
            self.stdout.write("üìã Step 4: Creating Collections...")
            collections_data = [
                {
                    'name': '–ù–∞—á–∞–ª—å–Ω—ã–µ —Å–ª–∞–π–º—ã',
                    'description': '–°–æ–±–µ—Ä–∏ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–ª–∞–π–º–æ–≤',
                    'reward': '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —É–¥–∞—á—É –≤ 2 —Ä–∞–∑–∞',
                    'effect_type': 'LuckBoost',
                    'effect_value': 2,
                    'requirements': [('–ó–µ–ª—ë–Ω—ã–π –°–ª–∞–π–º', 1), ('–°–∏–Ω–∏–π –°–ª–∞–π–º', 1), ('–ö—Ä–∞—Å–Ω—ã–π –°–ª–∞–π–º', 1), ('–ñ—ë–ª—Ç—ã–π –°–ª–∞–π–º', 1)]
                },
                {
                    'name': '–≠–ª–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ —Å–ª–∞–π–º—ã',
                    'description': '–°–æ–±–µ—Ä–∏ —Å–ª–∞–π–º–æ–≤ –≤—Å–µ—Ö —Å—Ç–∏—Ö–∏–π',
                    'reward': '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–º–æ–≤ –Ω–∞ 1',
                    'effect_type': 'HarvestMultiplier',
                    'effect_value': 1,
                    'requirements': [('–õ–µ–¥—è–Ω–æ–π –°–ª–∞–π–º', 1), ('–û–≥–Ω–µ–Ω–Ω—ã–π –°–ª–∞–π–º', 1), ('–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π –°–ª–∞–π–º', 1), ('–í–æ–¥–Ω—ã–π –°–ª–∞–π–º', 1)]
                },
                {
                    'name': '–†–µ–¥–∫–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã',
                    'description': '–°–æ–±–µ—Ä–∏ —Å–∞–º—ã—Ö —Ä–µ–¥–∫–∏—Ö —Å–ª–∞–π–º–æ–≤',
                    'reward': '–£–º–µ–Ω—å—à–∞–µ—Ç –≤—Ä–µ–º—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏–Ω–∞ –Ω–∞ 30%',
                    'effect_type': 'SpinCooldown',
                    'effect_value': 0.7,
                    'requirements': [('–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –°–ª–∞–π–º', 1), ('–í—Ä–µ–º–µ–Ω–Ω–æ–π –°–ª–∞–π–º', 1), ('–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –°–ª–∞–π–º', 1)]
                },
                {
                    'name': '–í—Å–µ –æ–±—ã—á–Ω—ã–µ',
                    'description': '–°–æ–±–µ—Ä–∏ –ø–æ 10 —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∫–∞–∂–¥–æ–≥–æ –æ–±—ã—á–Ω–æ–≥–æ —Å–ª–∞–π–º–∞',
                    'thumbnail': 'collections/common_slimes.png',
                    'reward': '–î–∞–µ—Ç —Ö5 —É–¥–∞—á–∏',
                    'effect_type': 'LuckBoost',
                    'effect_value': 5,
                    'requirements': [('–ó–µ–ª—ë–Ω—ã–π –°–ª–∞–π–º', 10), ('–°–∏–Ω–∏–π –°–ª–∞–π–º', 10), ('–ö—Ä–∞—Å–Ω—ã–π –°–ª–∞–π–º', 10), ('–ñ—ë–ª—Ç—ã–π –°–ª–∞–π–º', 10), ('–§–∏–æ–ª–µ—Ç–æ–≤—ã–π –°–ª–∞–π–º', 10), ('–û—Ä–∞–Ω–∂–µ–≤—ã–π –°–ª–∞–π–º', 10)]
                },
                {
                    'name': '–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π –Ω–∞–±–æ—Ä',
                    'description': '–°–æ–±–µ—Ä–∏ –≤—Å–µ—Ö –º–∏—Ñ–∏—á–µ—Å–∫–∏—Ö —Å–ª–∞–π–º–æ–≤',
                    'reward': '–£–¥–≤–∞–∏–≤–∞–µ—Ç —É–¥–∞—á—É –≤ 5 —Ä–∞–∑',
                    'effect_type': 'LuckBoost',
                    'effect_value': 5,
                    'requirements': [('–í—Ä–µ–º–µ–Ω–Ω–æ–π –°–ª–∞–π–º', 1), ('–ü–æ—Ä—Ç–∞–ª—å–Ω—ã–π –°–ª–∞–π–º', 1), ('–°–ª–∞–π–º –ó–µ–º–ª—è', 1), ('–ß–∏—Ç–µ—Ä –°–ª–∞–π–º', 1)]
                },
            ]
            
            collection_objects = {}
            for collection_data in collections_data:
                collection = Collection.objects.create(
                    name=collection_data['name'],
                    description=collection_data['description'],
                    reward=collection_data['reward'],
                    effect_type=collection_data['effect_type'],
                    effect_value=collection_data['effect_value'],
                    thumbnail=collection_data.get('thumbnail')
                )
                
                # Add requirements
                for slime_name, amount in collection_data['requirements']:
                    if slime_name in slime_objects:
                        CollectionRequirement.objects.create(
                            collection=collection,
                            slime_type=slime_objects[slime_name],
                            amount=amount
                        )
                
                collection_objects[collection.name] = collection
            
            self.stdout.write(f"‚úÖ Created {len(collections_data)} Collections")
            
            # STEP 5: Create Superuser with complete profile
            self.stdout.write("üë§ Step 5: Creating Superuser...")
            user = User.objects.create_superuser(
                username='Gefest',
                email='oppoosite23@gmail.com',
                password='X2120558Xc'
            )
            
            # Create PlayerInventory
            for slime in slime_objects.values():
                PlayerInventory.objects.create(
                    player=user,
                    slime_type=slime,
                    amount=slime.base_amount
                )
            
            # Create PlayerCollections
            for collection in collection_objects.values():
                PlayerCollection.objects.create(
                    player=user,
                    collection=collection,
                    completed=False,
                    claimed=False
                )
            
            # Create PlayerCrafts
            for recipe in recipe_objects.values():
                PlayerCraft.objects.create(
                    player=user,
                    recipe=recipe,
                    is_completed=False
                )
            
            self.stdout.write("‚úÖ Created Superuser with complete profile")
            
            # STEP 6: Final verification
            self.stdout.write("üîç Step 6: Final verification...")
            
            # Test authentication
            auth_user = authenticate(username='Gefest', password='X2120558Xc')
            auth_ok = auth_user is not None
            
            # Count everything
            counts = {
                'slimes': SlimeType.objects.count(),
                'recipes': CraftRecipe.objects.count(),
                'collections': Collection.objects.count(),
                'users': User.objects.count(),
                'player_inventory': PlayerInventory.objects.filter(player=user).count(),
                'player_collections': PlayerCollection.objects.filter(player=user).count(),
                'player_crafts': PlayerCraft.objects.filter(player=user).count(),
            }
            
            self.stdout.write("üìä FINAL RESULTS:")
            self.stdout.write(f"  - SlimeTypes: {counts['slimes']}")
            self.stdout.write(f"  - CraftRecipes: {counts['recipes']}")
            self.stdout.write(f"  - Collections: {counts['collections']}")
            self.stdout.write(f"  - Users: {counts['users']}")
            self.stdout.write(f"  - PlayerInventory: {counts['player_inventory']}")
            self.stdout.write(f"  - PlayerCollections: {counts['player_collections']}")
            self.stdout.write(f"  - PlayerCrafts: {counts['player_crafts']}")
            self.stdout.write(f"  - Authentication: {'‚úÖ WORKS' if auth_ok else '‚ùå FAILED'}")
            
        self.stdout.write(self.style.SUCCESS("üéâ FRESH SETUP COMPLETE!"))
        self.stdout.write("üë§ Admin login: Gefest / X2120558Xc")
        self.stdout.write("üîó Admin URL: /admin/")
        self.stdout.write("üì° API URL: /load/")